# generated by datamodel-codegen:
#   filename:  ShipEngine.json
#   timestamp: 2025-10-21T07:43:52+00:00

from __future__ import annotations

from enum import Enum

from pydantic import BaseModel, Field, conint

from .ShipComponentCondition import ShipComponentCondition
from .ShipComponentIntegrity import ShipComponentIntegrity
from .ShipComponentQuality import ShipComponentQuality
from .ShipRequirements import ShipRequirements


class Symbol(Enum):
    ENGINE_IMPULSE_DRIVE_I = "ENGINE_IMPULSE_DRIVE_I"
    ENGINE_ION_DRIVE_I = "ENGINE_ION_DRIVE_I"
    ENGINE_ION_DRIVE_II = "ENGINE_ION_DRIVE_II"
    ENGINE_HYPER_DRIVE_I = "ENGINE_HYPER_DRIVE_I"


class ShipEngine(BaseModel):
    symbol: Symbol = Field(..., description="The symbol of the engine.")
    name: str = Field(..., description="The name of the engine.")
    description: str = Field(..., description="The description of the engine.")
    condition: ShipComponentCondition
    integrity: ShipComponentIntegrity
    speed: conint(ge=1) = Field(
        ...,
        description="The speed stat of this engine. The higher the speed, the faster a ship can travel from one point to another. Reduces the time of arrival when navigating the ship.",
    )
    requirements: ShipRequirements
    quality: ShipComponentQuality
