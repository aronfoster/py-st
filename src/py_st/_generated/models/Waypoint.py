# generated by datamodel-codegen:
#   filename:  Waypoint.json
#   timestamp: 2025-10-21T07:43:52+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr

from .Chart import Chart
from .SystemSymbol import SystemSymbol
from .WaypointFaction import WaypointFaction
from .WaypointModifier import WaypointModifier
from .WaypointOrbital import WaypointOrbital
from .WaypointSymbol import WaypointSymbol
from .WaypointTrait import WaypointTrait
from .WaypointType import WaypointType


class Waypoint(BaseModel):
    symbol: WaypointSymbol
    type: WaypointType
    systemSymbol: SystemSymbol
    x: int = Field(
        ...,
        description="Relative position of the waypoint on the system's x axis. This is not an absolute position in the universe.",
    )
    y: int = Field(
        ...,
        description="Relative position of the waypoint on the system's y axis. This is not an absolute position in the universe.",
    )
    orbitals: List[WaypointOrbital] = Field(
        ..., description="Waypoints that orbit this waypoint."
    )
    orbits: Optional[constr(min_length=1)] = Field(
        None,
        description="The symbol of the parent waypoint, if this waypoint is in orbit around another waypoint. Otherwise this value is undefined.",
    )
    faction: Optional[WaypointFaction] = None
    traits: List[WaypointTrait] = Field(
        ..., description="The traits of the waypoint."
    )
    modifiers: Optional[List[WaypointModifier]] = Field(
        None, description="The modifiers of the waypoint."
    )
    chart: Optional[Chart] = None
    isUnderConstruction: bool = Field(
        ..., description="True if the waypoint is under construction."
    )
