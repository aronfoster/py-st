# generated by datamodel-codegen:
#   filename:  Waypoint.json
#   timestamp: 2025-10-09T06:51:20+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr

from . import (
    Chart,
    SystemSymbol,
    WaypointFaction,
    WaypointModifier,
    WaypointOrbital,
    WaypointSymbol,
    WaypointTrait,
    WaypointType,
)


class Model(BaseModel):
    symbol: WaypointSymbol.Model
    type: WaypointType.Model
    systemSymbol: SystemSymbol.Model
    x: int = Field(
        ...,
        description="Relative position of the waypoint on the system's x axis. This is not an absolute position in the universe.",
    )
    y: int = Field(
        ...,
        description="Relative position of the waypoint on the system's y axis. This is not an absolute position in the universe.",
    )
    orbitals: List[WaypointOrbital.Model] = Field(
        ..., description="Waypoints that orbit this waypoint."
    )
    orbits: Optional[constr(min_length=1)] = Field(
        None,
        description="The symbol of the parent waypoint, if this waypoint is in orbit around another waypoint. Otherwise this value is undefined.",
    )
    faction: Optional[WaypointFaction.Model] = None
    traits: List[WaypointTrait.Model] = Field(
        ..., description="The traits of the waypoint."
    )
    modifiers: Optional[List[WaypointModifier.Model]] = Field(
        None, description="The modifiers of the waypoint."
    )
    chart: Optional[Chart.Model] = None
    isUnderConstruction: bool = Field(
        ..., description="True if the waypoint is under construction."
    )
