# generated by datamodel-codegen:
#   filename:  Contract.json
#   timestamp: 2025-10-21T07:43:52+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import AwareDatetime, BaseModel, Field, constr

from .ContractTerms import ContractTerms


class Type(Enum):
    PROCUREMENT = "PROCUREMENT"
    TRANSPORT = "TRANSPORT"
    SHUTTLE = "SHUTTLE"


class Contract(BaseModel):
    id: constr(min_length=1) = Field(..., description="ID of the contract.")
    factionSymbol: constr(min_length=1) = Field(
        ..., description="The symbol of the faction that this contract is for."
    )
    type: Type = Field(..., description="Type of contract.")
    terms: ContractTerms
    accepted: bool = Field(
        ..., description="Whether the contract has been accepted by the agent"
    )
    fulfilled: bool = Field(
        ..., description="Whether the contract has been fulfilled"
    )
    expiration: AwareDatetime = Field(
        ..., description="Deprecated in favor of deadlineToAccept"
    )
    deadlineToAccept: Optional[AwareDatetime] = Field(
        None,
        description="The time at which the contract is no longer available to be accepted",
    )
