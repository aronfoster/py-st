# generated by datamodel-codegen:
#   filename:  Shipyard.json
#   timestamp: 2025-10-20T08:56:39+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr

from . import ShipType as ShipType_1
from . import ShipyardShip, ShipyardTransaction


class ShipType(BaseModel):
    type: ShipType_1


class Shipyard(BaseModel):
    symbol: constr(min_length=1) = Field(
        ...,
        description="The symbol of the shipyard. The symbol is the same as the waypoint where the shipyard is located.",
    )
    shipTypes: List[ShipType] = Field(
        ...,
        description="The list of ship types available for purchase at this shipyard.",
    )
    transactions: Optional[List[ShipyardTransaction]] = Field(
        None, description="The list of recent transactions at this shipyard."
    )
    ships: Optional[List[ShipyardShip]] = Field(
        None,
        description="The ships that are currently available for purchase at the shipyard.",
    )
    modificationsFee: int = Field(
        ...,
        description="The fee to modify a ship at this shipyard. This includes installing or removing modules and mounts on a ship. In the case of mounts, the fee is a flat rate per mount. In the case of modules, the fee is per slot the module occupies.",
    )
