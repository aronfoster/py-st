# generated by datamodel-codegen:
#   filename:  ShipFrame.json
#   timestamp: 2025-10-09T06:51:20+00:00

from __future__ import annotations

from enum import Enum

from pydantic import BaseModel, Field, conint

from . import (
    ShipComponentCondition,
    ShipComponentIntegrity,
    ShipComponentQuality,
    ShipRequirements,
)


class Symbol(Enum):
    FRAME_PROBE = "FRAME_PROBE"
    FRAME_DRONE = "FRAME_DRONE"
    FRAME_INTERCEPTOR = "FRAME_INTERCEPTOR"
    FRAME_RACER = "FRAME_RACER"
    FRAME_FIGHTER = "FRAME_FIGHTER"
    FRAME_FRIGATE = "FRAME_FRIGATE"
    FRAME_SHUTTLE = "FRAME_SHUTTLE"
    FRAME_EXPLORER = "FRAME_EXPLORER"
    FRAME_MINER = "FRAME_MINER"
    FRAME_LIGHT_FREIGHTER = "FRAME_LIGHT_FREIGHTER"
    FRAME_HEAVY_FREIGHTER = "FRAME_HEAVY_FREIGHTER"
    FRAME_TRANSPORT = "FRAME_TRANSPORT"
    FRAME_DESTROYER = "FRAME_DESTROYER"
    FRAME_CRUISER = "FRAME_CRUISER"
    FRAME_CARRIER = "FRAME_CARRIER"
    FRAME_BULK_FREIGHTER = "FRAME_BULK_FREIGHTER"


class Model(BaseModel):
    symbol: Symbol = Field(..., description="Symbol of the frame.")
    name: str = Field(..., description="Name of the frame.")
    description: str = Field(..., description="Description of the frame.")
    condition: ShipComponentCondition.Model
    integrity: ShipComponentIntegrity.Model
    moduleSlots: conint(ge=0) = Field(
        ...,
        description="The amount of slots that can be dedicated to modules installed in the ship. Each installed module take up a number of slots, and once there are no more slots, no new modules can be installed.",
    )
    mountingPoints: conint(ge=0) = Field(
        ...,
        description="The amount of slots that can be dedicated to mounts installed in the ship. Each installed mount takes up a number of points, and once there are no more points remaining, no new mounts can be installed.",
    )
    fuelCapacity: conint(ge=0) = Field(
        ...,
        description="The maximum amount of fuel that can be stored in this ship. When refueling, the ship will be refueled to this amount.",
    )
    requirements: ShipRequirements.Model
    quality: ShipComponentQuality.Model
