# generated by datamodel-codegen:
#   filename:  Market.json
#   timestamp: 2025-10-21T07:43:52+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field

from .MarketTradeGood import MarketTradeGood
from .MarketTransaction import MarketTransaction
from .TradeGood import TradeGood


class Market(BaseModel):
    symbol: str = Field(
        ...,
        description="The symbol of the market. The symbol is the same as the waypoint where the market is located.",
    )
    exports: List[TradeGood] = Field(
        ...,
        description="The list of goods that are exported from this market.",
    )
    imports: List[TradeGood] = Field(
        ...,
        description="The list of goods that are sought as imports in this market.",
    )
    exchange: List[TradeGood] = Field(
        ...,
        description="The list of goods that are bought and sold between agents at this market.",
    )
    transactions: Optional[List[MarketTransaction]] = Field(
        None,
        description="The list of recent transactions at this market. Visible only when a ship is present at the market.",
    )
    tradeGoods: Optional[List[MarketTradeGood]] = Field(
        None,
        description="The list of goods that are traded at this market. Visible only when a ship is present at the market.",
    )
